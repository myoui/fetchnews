{"version":3,"sources":["sidebar.js","content.js","App.js","serviceWorker.js","index.js"],"names":["NewsLink","react_default","a","createElement","Link","to","this","props","link","className","name","Component","NavBar","_Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","sidebar_NewsLink","sourcesKey","usnews","worldnews","cnn","bbc","washpost","espn","engadget","News","_Component","_this","call","fetchArticles","apiKey","state","exApi","_api","fetch","concat","match","params","source","then","response","json","parseArticles","setState","status","total","totalResults","articles","message","changeApi","e","target","articlesJson","time","undefined","articlesAll","map","item","index","href","url","title","urlToImage","src","alt","description","Date","publishedAt","toLocaleString","type","onChange","App","build","sidebar_NavBar","Route","exact","path","render","Redirect","component","Boolean","window","location","hostname","ReactDOM","BrowserRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a358ee3f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\n\nclass NewsLink extends Component {\n    render() {\n        return(\n            <div>\n                <Link to={this.props.link}>\n                    <div className='selector'>{this.props.name}</div>\n                </Link>\n            </div>)\n    }\n}\n\n\nexport class NavBar extends Component {\n    render() {\n        return (\n            <div className='navBar'>\n                <NewsLink link=\"usnews\" name=\"Top US News\"/>\n                <NewsLink link=\"cnn\" name=\"CNN (USA)\"/>\n                <NewsLink link=\"bbc\" name=\"BBC (UK)\"/>\n                <NewsLink link=\"washpost\" name=\"Washington Post (USA)\"/>\n                <NewsLink link=\"espn\" name=\"ESPN\"/>\n                <NewsLink link=\"engadget\" name=\"Engadget\"/>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\n\nconst sourcesKey = {\n    usnews:\"country=us\",\n    worldnews:\"category=general\",\n    cnn:\"sources=cnn\",\n    bbc:\"sources=bbc-news\",\n    washpost:\"sources=the-washington-post\",\n    espn:\"sources=espn\",\n    engadget:\"sources=engadget\"\n}\n\nexport class News extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articlesJson: [],\n            articles: [],\n            total: \"\",\n            status: \"\",\n            message: \"\",\n            time: undefined,\n            exApi:\"\"\n        };\n        this._api = \"81fe8bbe33f64b949474bf94cd180dab\"; // first key\n    }\n\n    fetchArticles = () => {\n        const apiKey = this.state.exApi !== \"\" ? this.state.exApi : this._api;\n        fetch(`https://newsapi.org/v2/top-headlines?${sourcesKey[this.props.match.params.source]}&apiKey=${apiKey}`).then(\n            response => response.json()).then(\n                json => this.parseArticles(json))\n    }\n    parseArticles = (json) => {\n        this.setState({status: json.status, total:json.totalResults, articles: json.articles, message: json.message})\n    }\n    changeApi = (e) => {\n        this.setState({exApi: e.target.value})\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.source) {\n            this.fetchArticles()\n        }\n    }\n    componentDidUpdate() {\n        this.fetchArticles()\n    }\n\n    render() {\n        const articlesAll = this.state.status === \"ok\"? this.state.articles.map(\n            (item, index) => <div key={'article_'+{index}} className=\"article\">\n                <div className=\"artTitle\"><a href={item.url} target=\"_blank\">{item.title}</a></div>\n                {item.urlToImage?\n                <div><img src={item.urlToImage} className=\"artImage\" alt=\"Image unavailable\"/></div> : null\n                }\n                <div className=\"artDesc\">{item.source.name}{item.description? \" - \" : null}{item.description}</div>\n                <div className=\"artDate\">Published: {new Date(item.publishedAt).toLocaleString()}</div>\n            </div>) : null;\n        return(\n            <div className=\"content\">\n                <form>\n                    News API Key: <input \n                        type=\"text\" \n                        value={this.state.exApi}\n                        onChange={this.changeApi}/>\n                </form>\n                <div>Articles from {this.props.match.params.source}. API status: {this.state.status}. Count: {this.state.total}</div>\n                <div>{this.state.message ? \"Message: \"+this.state.message : null}</div>\n                {articlesAll}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport {  } from 'react-spring';\nimport { Row, Column } from 'simple-flexbox';\nimport { NavBar } from \"./sidebar\";\nimport { News } from \"./content\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Row>\n        <Column>\n          <NavBar/>\n        </Column>\n        <Column>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/usnews\"/>}/>\n          <Route path=\"/:source\" component={News} />          \n        </Column>\n      </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// TODO : footer, transitions\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter basename=\"fetchnews\">\n    <App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}