{"version":3,"sources":["sidebar.js","content.js","App.js","serviceWorker.js","index.js"],"names":["NewsLink","react_default","a","createElement","onClick","window","scrollTo","top","behavior","Link","to","this","props","link","className","name","Component","NavBar","_Component2","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","mobile","inherits","createClass","key","value","setState","isMobile","build","sidebar_NewsLink","sourcesKey","usnews","worldnews","cnn","bbc","washpost","espn","engadget","News","_Component","fetchArticles","apiKey","exApi","_api","console","log","concat","Date","toTimeString","fetch","match","params","source","then","response","json","parseArticles","status","articles","total","totalResults","message","count","changeApi","e","target","articlesJson","time","undefined","articlesAll","map","item","index","href","url","rel","title","urlToImage","src","alt","description","publishedAt","toLocaleString","style","fontSize","type","onChange","App","sidebar_NavBar","Switch","Route","exact","path","render","Redirect","component","Boolean","location","hostname","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf79d9fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'is-mobile';\nimport { Row, Column } from 'simple-flexbox'\nclass NewsLink extends Component {\n    render() {\n        return(\n            <div onClick={() => window.scrollTo({top:0,behavior:\"smooth\"})}>\n                <Link to={this.props.link}>\n                    <div className='selector'>{this.props.name}</div>\n                </Link>\n            </div>)\n    }\n}\n\n\nexport class NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { mobile: false }\n    }\n\n    componentDidMount() {\n        this.setState({mobile: isMobile.isMobile()})\n    }\n\n    render() {\n        if (!this.state.mobile) {\n            return (\n                <div className='navBar'>\n                    <NewsLink link=\"usnews\" name=\"Top US News\"/>\n                    <NewsLink link=\"cnn\" name=\"CNN\"/>\n                    <NewsLink link=\"bbc\" name=\"BBC\"/>\n                    <NewsLink link=\"washpost\" name=\"Washington Post\"/>\n                    <NewsLink link=\"espn\" name=\"ESPN\"/>\n                    <NewsLink link=\"engadget\" name=\"Engadget\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div className='navBarMob'>\n                <Row>\n                    <Column>\n                        <NewsLink link=\"usnews\" name=\"Top US News\"/>\n                    </Column>\n                    <Column>\n                        <NewsLink link=\"cnn\" name=\"CNN\"/>\n                    </Column>\n                    <Column>\n                        <NewsLink link=\"bbc\" name=\"BBC\"/>\n                    </Column>\n                    <Column>\n                        <NewsLink link=\"washpost\" name=\"Washington Post\"/>\n                    </Column>\n                    <Column>\n                        <NewsLink link=\"espn\" name=\"ESPN\"/>\n                    </Column>\n                    <Column>\n                        <NewsLink link=\"engadget\" name=\"Engadget\"/>\n                    </Column>\n                </Row>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, { Component } from 'react';\n\nconst sourcesKey = {\n    usnews:\"country=us\",\n    worldnews:\"category=general\",\n    cnn:\"sources=cnn\",\n    bbc:\"sources=bbc-news\",\n    washpost:\"sources=the-washington-post\",\n    espn:\"sources=espn\",\n    engadget:\"sources=engadget\"\n}\n\nexport class News extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articlesJson: [],\n            articles: [],\n            total: \"\",\n            status: \"\",\n            message: \"\",\n            time: undefined,\n            exApi:\"\",\n            source:\"\",\n            count:0,\n        };\n        this._api = \"81fe8bbe33f64b949474bf94cd180dab\"; // first key\n    }\n\n    fetchArticles = () => {\n        const apiKey = this.state.exApi !== \"\" ? this.state.exApi : this._api;\n        console.log(`calling fetchArticles() ${new Date().toTimeString()}`)\n        fetch(`https://newsapi.org/v2/top-headlines?${sourcesKey[this.props.match.params.source]}&apiKey=${apiKey}`).then(\n            response => response.json()).then(\n                json => this.parseArticles(json))\n    }\n    parseArticles = (json) => {\n        this.setState({status: \"\", articles: \"\"})\n        this.setState({status: json.status, total:json.totalResults, articles: json.articles, message: json.message, count: this.state.count+1})\n       }\n    changeApi = (e) => {\n        this.setState({exApi: e.target.value})\n    }\n\n    componentDidMount() {\n        this.fetchArticles()\n    }\n    componentDidUpdate() {\n        if (this.props.match.params.source !== this.state.source) {\n            this.setState({source: this.props.match.params.source})\n            this.fetchArticles()\n        }\n    }\n\n    render() {\n        const articlesAll = this.state.status === \"ok\"? this.state.articles.map(\n            (item, index) => <div key={'article_'+index} className=\"article\">\n                <div className=\"artTitle\">\n                    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\n                </div>\n                {item.urlToImage?\n                <div><img src={item.urlToImage} className=\"artImage\" alt=\"\"/></div> : null\n                }\n                <div className=\"artDesc\">{item.source.name}{item.description? \" - \" : null}{item.description}</div>\n                <div className=\"artDate\">Published: {new Date(item.publishedAt).toLocaleString()}</div>\n            </div>) : null;\n        return(\n            <div className=\"content\">\n                <div><h4>News Feed (using NewsAPI)</h4></div>\n                <div style={{fontSize:\"90%\"}}>\n                    <form>\n                        News API Key: <input \n                            type=\"text\" \n                            value={this.state.exApi}\n                            onChange={this.changeApi}/>\n                    </form>\n                    <div>Articles from {this.props.match.params.source}. API status: {this.state.status}. Fetch count: {this.state.count}</div>\n                    <div>{this.state.message ? \"Message: \"+this.state.message : null}</div>\n                </div>\n                {articlesAll}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { Row, Column } from 'simple-flexbox';\nimport { isMobile } from 'is-mobile';\n\nimport { NavBar } from \"./sidebar\";\nimport { News } from \"./content\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    if (isMobile.isMobile()) {\n      return (\n        <div className=\"App\">\n            <NavBar/>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/usnews\"/>}/>\n              <Route path=\"/:source\" component={News} />\n            </Switch>\n        </div>)\n    } else {\n      return (\n        <div className=\"App\">\n        <Row>\n          <Column>\n            <NavBar/>\n          </Column>\n          <Column>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/usnews\"/>}/>\n              <Route path=\"/:source\" component={News} />\n            </Switch>\n          </Column>\n        </Row>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n\n\n// TODO : footer, transitions\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}