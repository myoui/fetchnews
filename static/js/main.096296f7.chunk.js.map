{"version":3,"sources":["../node_modules/encoding/lib sync","sidebar.js","content.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","NewsLink","react_default","a","createElement","onClick","window","scrollTo","top","behavior","Link","to","this","props","link","className","name","Component","NavBar","_Component2","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","mobile","inherits","createClass","key","value","setState","isMobile","build","sidebar_NewsLink","fetch","require","sourcesKey","usnews","worldnews","cnn","bbc","washpost","espn","engadget","News","_Component","fetchArticles","apiKey","exApi","_api","console","log","concat","Date","toTimeString","match","params","source","then","response","json","parseArticles","status","articles","total","totalResults","message","count","changeApi","target","changeArticleDb","artDb","postToDatabase","alert","postMe","sourceName","title","description","publishedAt","url","urlToImage","method","headers","Content-Type","body","JSON","stringify","res","obj","catch","error","articlesJson","time","undefined","_this2","articlesAll","map","item","index","href","rel","src","alt","toLocaleString","style","fontSize","type","onChange","App","sidebar_NavBar","Switch","Route","exact","path","render","Redirect","component","Boolean","location","hostname","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.096296f7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 158;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { isMobile } from 'is-mobile'\nimport { Row, Column } from 'simple-flexbox'\nclass NewsLink extends Component {\n  render () {\n    return (\n      <div onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>\n        <Link to={this.props.link}>\n          <div className='selector'>{this.props.name}</div>\n        </Link>\n      </div>)\n  }\n}\n\nexport class NavBar extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { mobile: false }\n  }\n\n  componentDidMount () {\n    this.setState({ mobile: isMobile.isMobile() })\n  }\n\n  render () {\n    if (!this.state.mobile) {\n      return (\n        <div className='navBar'>\n          <NewsLink link='usnews' name='Top US News' />\n          <NewsLink link='cnn' name='CNN' />\n          <NewsLink link='bbc' name='BBC' />\n          <NewsLink link='washpost' name='Washington Post' />\n          <NewsLink link='espn' name='ESPN' />\n          <NewsLink link='engadget' name='Engadget' />\n        </div>\n      )\n    } else {\n      return (\n        <div className='navBarMob'>\n          <Row>\n            <Column>\n              <NewsLink link='usnews' name='Top US News' />\n            </Column>\n            <Column>\n              <NewsLink link='cnn' name='CNN' />\n            </Column>\n            <Column>\n              <NewsLink link='bbc' name='BBC' />\n            </Column>\n            <Column>\n              <NewsLink link='washpost' name='Washington Post' />\n            </Column>\n            <Column>\n              <NewsLink link='espn' name='ESPN' />\n            </Column>\n            <Column>\n              <NewsLink link='engadget' name='Engadget' />\n            </Column>\n          </Row>\n        </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react'\nconst fetch = require('node-fetch')\n\nconst sourcesKey = {\n  usnews: 'country=us',\n  worldnews: 'category=general',\n  cnn: 'sources=cnn',\n  bbc: 'sources=bbc-news',\n  washpost: 'sources=the-washington-post',\n  espn: 'sources=espn',\n  engadget: 'sources=engadget'\n}\n\nexport class News extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articlesJson: [],\n      articles: [],\n      total: '',\n      status: '',\n      message: '',\n      time: undefined,\n      exApi: '',\n      artDb: 'http://localhost:3001/articles',\n      source: '',\n      count: 0\n    }\n    this._api = '81fe8bbe33f64b949474bf94cd180dab' // first key\n  }\n\n    fetchArticles = () => {\n      const apiKey = this.state.exApi !== '' ? this.state.exApi : this._api\n      console.log(`calling fetchArticles() ${new Date().toTimeString()}`)\n      fetch(`https://newsapi.org/v2/top-headlines?${sourcesKey[this.props.match.params.source]}&apiKey=${apiKey}`).then(\n        response => response.json()).then(\n        json => this.parseArticles(json))\n    }\n    parseArticles = (json) => {\n      this.setState({ status: '', articles: '' })\n      this.setState({ status: json.status, total: json.totalResults, articles: json.articles, message: json.message, count: this.state.count + 1 })\n    }\n    changeApi = (e) => {\n      this.setState({ exApi: e.target.value })\n    }\n    changeArticleDb = (e) => {\n      this.setState({ artDb: e.target.value })\n    }\n\n    postToDatabase = (e) => {\n      if (this.state.artDb === '') {\n        // console.log(this.state.articles[e.target.value].title)\n        window.alert('DB URL empty.')\n      } else {\n        let json = this.state.articles[e.target.value]\n        let postMe = {\n          sourceName: json.source.name,\n          title: json.title,\n          description: json.description,\n          publishedAt: json.publishedAt,\n          url: json.url,\n          urlToImage: json.urlToImage\n        }\n        fetch(this.state.artDb, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postMe)\n        }).then(res => {\n          const resStatus = res.status\n          return { status: resStatus, json: res.json() }\n        })\n          .then(obj => {\n            if (obj.status === 201) {\n              window.alert(`Successfully posted article.`)\n              console.log(obj.json)\n            } else if (obj.status === 500) {\n              window.alert(`Error occurred while posting article. Check log for details.`)\n              console.log(obj.json)\n            }\n          }).catch(error => window.alert(`Error connecting to API. Please ensure REST server is running.`, error))\n      }\n    }\n\n    componentDidMount () {\n      this.fetchArticles()\n    }\n    componentDidUpdate () {\n      if (this.props.match.params.source !== this.state.source) {\n        this.setState({ source: this.props.match.params.source })\n        this.fetchArticles()\n      }\n    }\n\n    render () {\n      const articlesAll = this.state.status === 'ok' ? this.state.articles.map(\n        (item, index) => <div key={'article_' + index} className='article'>\n          <div className='artTitle'>\n            <a href={item.url} target='_blank' rel='noopener noreferrer'>{item.title}</a>\n          </div>\n          {item.urlToImage\n            ? <div><img src={item.urlToImage} className='artImage' alt='' /></div> : null\n          }\n          <div className='artDesc'>{item.source.name}{item.description ? ' - ' : null}{item.description}</div>\n          <div className='artDate'>Published: {new Date(item.publishedAt).toLocaleString()}</div>\n          <div>\n            <button value={index} onClick={this.postToDatabase}>Save</button>\n          </div>\n        </div>) : null\n      return (\n        <div className='content'>\n          <div><h4>News Feed (using NewsAPI)</h4></div>\n          <div style={{ fontSize: '90%' }}>\n            <form>\n              News API Key: <input type='text' value={this.state.exApi} onChange={this.changeApi} /><br />\n              DB URL: <input type='text' value={this.state.artDb} onChange={this.changeArticleDb}\n              />\n            </form>\n            <div>Articles from {this.props.match.params.source}. API status: {this.state.status}. Fetch count: {this.state.count}</div>\n            <div>{this.state.message ? 'Message: ' + this.state.message : null}</div>\n          </div>\n          {articlesAll}\n        </div>\n      )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { Row, Column } from 'simple-flexbox'\nimport { isMobile } from 'is-mobile'\n\nimport { NavBar } from './sidebar'\nimport { News } from './content'\n\nimport './App.css'\n\nclass App extends Component {\n  render () {\n    if (isMobile.isMobile()) {\n      return (\n        <div className='App'>\n          <NavBar />\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/usnews' />} />\n            <Route path='/:source' component={News} />\n          </Switch>\n        </div>)\n    } else {\n      return (\n        <div className='App'>\n          <Row>\n            <Column>\n              <NavBar />\n            </Column>\n            <Column>\n              <Switch>\n                <Route exact path='/' render={() => <Redirect to='/usnews' />} />\n                <Route path='/:source' component={News} />\n              </Switch>\n            </Column>\n          </Row>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n\n// TODO : footer, transitions\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}